CROSS_PREFIX = ./Crosstools/bin/i586-elf-

KERNEL_CC = ${CROSS_PREFIX}gcc
KERNEL_LD = ${CROSS_PREFIX}ld
KERNEL_OBJDUMP = ${CROSS_PREFIX}objdump
KERNEL_OBJCOPY = ${CROSS_PREFIX}objcopy

KERNEL_CFLAGS = -m32 -ffreestanding -Wall -Wextra -I./include
KERNEL_LDFLAGS = -melf_i386

rule kernel_cc
  command = $KERNEL_CC -MMD -MF $out.d $KERNEL_CFLAGS -c -o $out $in
  description = KERNEL_CC $out
  depfile = $out.d
  deps = gcc

rule kernel_link
  command = $KERNEL_LD $KERNEL_LDFLAGS -o $out $in
  description = KERNEL_LINK $out

rule r_boot
  command = $KERNEL_OBJCOPY -S -O binary -j .text $in $out

rule r_nos_img
  command = fasm $in
  description = GENERATE $out

#: boot
build boot/boot.o: kernel_cc boot/boot.S
  KERNEL_CFLAGS = $KERNEL_CFLAGS -nostdinc

build boot/main.o: kernel_cc boot/main.c
  KERNEL_CFLAGS = $KERNEL_CFLAGS -nostdinc -Os

build boot/boot.out: kernel_link boot/boot.o $
  boot/main.o
  KERNEL_LDFLAGS = $KERNEL_LDFLAGS -N -e start -Ttext 0x7C00

build boot/boot: r_boot boot/boot.out

#: kernel
build kernel/kmain.o: kernel_cc kernel/kmain.c

build kernel/kernel: kernel_link kernel/kmain.o | kernel/kernel.ld
  KERNEL_LDFLAGS = $KERNEL_LDFLAGS -T kernel/kernel.ld -nostdlib

#: nos.img
build nos.img: r_nos_img nos.asm | boot/boot $
  kernel/kernel

build all: phony nos.img

default all
